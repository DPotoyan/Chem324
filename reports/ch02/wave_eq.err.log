Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from IPython.display import HTML

# Parameters (reduced frames for faster export)
L = 1.0
v = 1.0
B = 1.0
A = {1: 1.0, 2: 1.0, 3: 1.0}
phi = {1: 0.0, 2: 0.0, 3: 0.0}

x = np.linspace(0, L, 600)

def X(n, x):
    return np.sin(n * np.pi * x / L)

def T(n, t):
    omega_n = n * np.pi * v / L
    return np.cos(omega_n * t + phi[n])

def u_mode(n, x, t):
    return B * X(n, x) * T(n, t)

def u_sum(modes, x, t):
    s = np.zeros_like(x)
    for n in modes:
        s += A[n] * X(n, x) * T(n, t)
    return s

omega1 = np.pi * v / L
T1 = 2 * np.pi / omega1
tmax = 2 * T1
frames = 120  # fewer frames
ts = np.linspace(0, tmax, frames)

fig, axes = plt.subplots(2, 2, figsize=(8, 6))
axes = axes.ravel()
titles = ["n = 1", "n = 3", "n = 1 + 2", "n = 1 + 2 + 3"]
lines = []
for ax, title in zip(axes, titles):
    ax.set_xlim(0, L)
    ax.set_ylim(-1.6, 1.6)
    ax.set_xlabel("x")
    ax.set_ylabel("u(x,t)")
    ax.set_title(title)
    ax.axhline(0, linewidth=0.8)
    line, = ax.plot([], [])
    lines.append(line)

fig.suptitle("Standing waves on a fixedâ€“fixed string")

def init():
    for line in lines:
        line.set_data([], [])
    return lines

def update(idx):
    t = ts[idx]
    lines[0].set_data(x, u_mode(1, x, t))
    lines[1].set_data(x, u_mode(3, x, t))
    lines[2].set_data(x, u_sum([1, 2], x, t))
    lines[3].set_data(x, u_sum([1, 2, 3], x, t))
    return lines

anim = FuncAnimation(fig, update, frames=frames, init_func=init, blit=True, interval=1000*(tmax/frames))

plt.close(fig)  # Prevents static display of the last frame
HTML(ani.to_jshtml())

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[2], line 69[0m
[1;32m     66[0m anim [38;5;241m=[39m FuncAnimation(fig, update, frames[38;5;241m=[39mframes, init_func[38;5;241m=[39minit, blit[38;5;241m=[39m[38;5;28;01mTrue[39;00m, interval[38;5;241m=[39m[38;5;241m1000[39m[38;5;241m*[39m(tmax[38;5;241m/[39mframes))
[1;32m     68[0m plt[38;5;241m.[39mclose(fig)  [38;5;66;03m# Prevents static display of the last frame[39;00m
[0;32m---> 69[0m HTML([43mani[49m[38;5;241m.[39mto_jshtml())

[0;31mNameError[0m: name 'ani' is not defined

